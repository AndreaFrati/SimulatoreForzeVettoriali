/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package simulatorediforzevettoriali;

import java.awt.BasicStroke;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Line2D;
import java.awt.image.BufferedImage;

/**
 *
 * @author andrea.frati
 */
public class CanvasPanel extends javax.swing.JPanel {

    /**
     * Creates new form CanvasPanel
     */
    public CanvasPanel() {
        initComponents();
    }

    //@Override
//    protected void paintComponent(Graphics g) {
//        super.paint(g);
//        //g = canvasPanel.getGraphics();
//        Graphics2D g2 = (Graphics2D) g;
//        bi = new BufferedImage(canvasPanel.getWidth(), canvasPanel.getHeight(), BufferedImage.TYPE_INT_RGB);
//        big = bi.createGraphics();
//        big.setStroke(new BasicStroke(0.8f));
//        big.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
//        big.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
//        big.setColor(java.awt.Color.RED);
//        fRis = new Vector(xRis, yRis, "forza risultante");
//        vectors.set(0, fRis);
//        xCenter = (canvasPanel.getX() + canvasPanel.getWidth()) / 2;
//        yCenter = (canvasPanel.getY() + canvasPanel.getHeight()) / 2;
//        //big.clearRect(0, 0, canvasPanel.getWidth(), canvasPanel.getHeight());
//        for (int i = 0; i < vectors.size(); i++) {
//            big.draw(new Line2D.Double(xObject, yObject, (int) vectors.get(i).x + xObject, (int) vectors.get(i).y + yObject));
//        }
//        if (drag) {
//            big.draw(new Line2D.Double(x, y, (int) vectorTemp.x, (int) vectorTemp.y));
//        }
//        if (reset) {
//            xObject = xCenter;
//            yObject = yCenter;
//            big.fill(new Ellipse2D.Double(xObject - 10, yObject - 10, 20, 20));
//            reset = false;
//            stop = true;
////            repaint();
//        } else if (stop) {
//            if (!stopStart) {
//                big.draw(new Line2D.Double(xCenter, yCenter, xObject, yObject));
//            }
//            big.fill(new Ellipse2D.Double(xObject - 10, yObject - 10, 20, 20));
//        } else {
//            //try
//            //{
//            big.draw(new Line2D.Double(xCenter, yCenter, xObject, yObject));
//            big.fill(new Ellipse2D.Double(xObject - 10, yObject - 10, 20, 20));
////                Thread.sleep(1);
//            xObject += xRis / 400;
//            yObject += yRis / 400;
////                repaint();
//            //}
//            //catch(InterruptedException ex)
//            //{
//            stop = true;
//            //}
//        }
//        g2.drawImage(bi, 0, 0, this);
//    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
